# Generated by Django 2.1 on 2019-05-18 20:58

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cadastro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conta_sid', models.CharField(help_text='Nome da conta', max_length=34, validators=[
                    django.core.validators.RegexValidator(code='erro_conta',
                                                          message='Conta deve conter apenas letras ou números.',
                                                          regex='^[a-zA-Z0-9]+$'),
                    django.core.validators.MinLengthValidator(limit_value=34),
                    django.core.validators.MaxLengthValidator(limit_value=34)], verbose_name='Conta:')),
                ('token_sid', models.CharField(help_text='Token de acesso', max_length=34, validators=[
                    django.core.validators.RegexValidator(code='erro_token',
                                                          message='Token deve conter apenas letras ou números.',
                                                          regex='^[a-zA-Z0-9]+$'),
                    django.core.validators.MinLengthValidator(limit_value=32),
                    django.core.validators.MaxLengthValidator(limit_value=34)], verbose_name='Token:')),
                ('servicos', models.CharField(help_text='Nome do serviço', max_length=34, validators=[
                    django.core.validators.RegexValidator(code='erro_servico',
                                                          message='Serviço deve conter apenas letras ou números.',
                                                          regex='^[a-zA-Z0-9]+$'),
                    django.core.validators.MinLengthValidator(limit_value=34),
                    django.core.validators.MaxLengthValidator(limit_value=34)], verbose_name='Serviços')),
                ('ligacao_de', models.CharField(help_text='Número de origem. Ex: +5554988776655', max_length=14,
                                                validators=[
                                                    django.core.validators.RegexValidator(
                                                        code='erro_numero_origem',
                                                        message='Formato de número inválido.',
                                                        regex='^\\+[0-9]+$'),
                                                    django.core.validators.MinLengthValidator(limit_value=13),
                                                    django.core.validators.MaxLengthValidator(limit_value=14)],
                                                verbose_name='Ligação de:')),
                ('ligacao_para', models.CharField(help_text='Número de destino. Ex: +5554988776655', max_length=14,
                                                  validators=[
                                                      django.core.validators.RegexValidator(
                                                          code='erro_numero_destino',
                                                          message='Formato de número inválido.', regex='^\\+[0-9]+$'),
                                                      django.core.validators.MinLengthValidator(limit_value=14),
                                                      django.core.validators.MaxLengthValidator(limit_value=14)],
                                                  verbose_name='Ligação para:')),
                ('mensagem',
                 models.CharField(help_text='Mensagem a ser enviada', max_length=20, verbose_name='Mensagem:')),
            ],
        ),
    ]
